name: ⛅ METAR ⛈️

on:
  schedule:
    - cron: "0,30 * * * *"   # run at :00 and :30
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: metar-fetch-clean
  cancel-in-progress: true

jobs:
  fetch_and_clean:
    name: 📡 Fetch → 🧹 Clean (single run)
    runs-on: ubuntu-latest
    container:
      image: rocker/tidyverse:4.3.3

    env:
      CHECKWX_API_KEY: ${{ secrets.CHECKWX_API_KEY }}

    defaults:
      run:
        # Force all run steps into the repo directory
        working-directory: ${{ github.workspace }}

    steps:
      - name: 🛎️ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: 🔍 Sanity check workspace
        run: |
          echo "GITHUB_WORKSPACE=${GITHUB_WORKSPACE}"
          pwd
          ls -la
          # Confirm we are inside a git repo
          if [ ! -d ".git" ]; then
            echo "::error::No .git directory found in $PWD"
            exit 1
          fi
          git rev-parse --is-inside-work-tree

      - name: 📦 Ensure required R packages are installed
        run: |
          Rscript -e 'need <- c("httr","jsonlite","tibble","dplyr","lubridate","readr");
                      missing <- need[!(need %in% rownames(installed.packages()))];
                      if(length(missing)) install.packages(missing, repos="https://cloud.r-project.org", quiet=TRUE)'

      - name: 📝 Run METAR fetch script
        run: Rscript metar_fetch.R

      - name: 🧹 Run cleaning script
        run: Rscript clean_metars.R

      - name: 💾 Commit and push updated files
        run: |
          # Configure git scoped to the workspace path and always operate with -C
          git -C "${GITHUB_WORKSPACE}" config user.name "github-actions[bot]"
          git -C "${GITHUB_WORKSPACE}" config user.email "github-actions[bot]@users.noreply.github.com"
          git -C "${GITHUB_WORKSPACE}" config --global --add safe.directory "${GITHUB_WORKSPACE}"

          # Stage outputs from both scripts (ignore if patterns don't match)
          git -C "${GITHUB_WORKSPACE}" add all_metars*.csv metar_log.txt clean_metars*.csv clean_log.txt || true

          # Helpful diagnostics
          git -C "${GITHUB_WORKSPACE}" status
          git -C "${GITHUB_WORKSPACE}" diff --cached --stat

          if [ -n "$(git -C "${GITHUB_WORKSPACE}" status --porcelain)" ]; then
            git -C "${GITHUB_WORKSPACE}" commit -m "Fetch & Clean METARs $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            git -C "${GITHUB_WORKSPACE}" push
          else
            echo "No changes to commit."
          fi
